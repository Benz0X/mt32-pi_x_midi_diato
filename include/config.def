// Config option definition file.
// Format: CFG(<INI name>, <type>, <class member name>, <default value>, <extra parser function args>...)

#ifndef BEGIN_SECTION
#define BEGIN_SECTION(SECTION)
#endif

#ifndef CFG
#define CFG(INI_NAME, TYPE, MEMBER_NAME, DEFAULT, ...)
#endif

#ifndef END_SECTION
#define END_SECTION
#endif

BEGIN_SECTION(system)
CFG(default_synth,			TSystemDefaultSynth,		SystemDefaultSynth,			TSystemDefaultSynth::MT32				)
CFG(i2c_baud_rate,			int,						SystemI2CBaudRate,			400000									)
CFG(power_save_timeout,		int,						SystemPowerSaveTimeout,		300										)
END_SECTION

BEGIN_SECTION(midi)
CFG(usb,					bool,						MIDIUSB,					true									)
CFG(gpio_baud_rate,			int,						MIDIGPIOBaudRate,			31250									)
CFG(gpio_thru,				bool,						MIDIGPIOThru,				false									)
END_SECTION

BEGIN_SECTION(audio)
CFG(output_device,			TAudioOutputDevice,			AudioOutputDevice,			TAudioOutputDevice::PWM					)
CFG(sample_rate,			int,						AudioSampleRate,			48000									)
CFG(chunk_size,				int,						AudioChunkSize,				256										)
CFG(i2c_dac_address,		int,						AudioI2CDACAddress,			0x4c,							true	)
CFG(i2c_dac_init,			TAudioI2CDACInit,			AudioI2CDACInit,			TAudioI2CDACInit::None					)
END_SECTION

BEGIN_SECTION(control)
CFG(mister,					bool,						ControlMister,				false									)
END_SECTION

BEGIN_SECTION(mt32emu)
CFG(resampler_quality,		TMT32EmuResamplerQuality,	MT32EmuResamplerQuality,	TMT32EmuResamplerQuality::Good			)
CFG(midi_channels,			TMT32EmuMIDIChannels,		MT32EmuMIDIChannels,		TMT32EmuMIDIChannels::Standard			)
CFG(rom_set,				TMT32EmuROMSet,				MT32EmuROMSet,				TMT32EmuROMSet::MT32Old					)
END_SECTION

BEGIN_SECTION(fluidsynth)
CFG(soundfont,				int,						FluidSynthSoundFont,		0										)
CFG(polyphony,				int,						FluidSynthPolyphony,		256										)
END_SECTION

BEGIN_SECTION(lcd)
CFG(type,					TLCDType,					LCDType,					TLCDType::None							)
CFG(width,					int,						LCDWidth,					20										)
CFG(height,					int,						LCDHeight,					2										)
CFG(i2c_lcd_address,		int,						LCDI2CLCDAddress,			0x3c,							true	)
CFG(rotation,				TLCDRotation,				LCDRotation,				TLCDRotation::Normal					)
END_SECTION

#undef BEGIN_SECTION
#undef CFG
#undef END_SECTION
