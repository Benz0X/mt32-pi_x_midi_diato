From fbe8320f65524bc7bf4afe225901b75cb43b3c7e Mon Sep 17 00:00:00 2001
From: Dale Whinham <dwhinham@users.noreply.github.com>
Date: Tue, 10 Nov 2020 08:32:33 +0000
Subject: [PATCH] soundbasedevice: Allow queue allocation in frames (#158)

---
 include/circle/soundbasedevice.h |  5 +++++
 lib/soundbasedevice.cpp          | 19 +++++++++++++++++++
 2 files changed, 24 insertions(+)

diff --git a/include/circle/soundbasedevice.h b/include/circle/soundbasedevice.h
index f3facb1a..844df336 100644
--- a/include/circle/soundbasedevice.h
+++ b/include/circle/soundbasedevice.h
@@ -84,6 +84,11 @@ class CSoundBaseDevice : public CDevice		/// Base class of sound devices
 	/// \note Not used, if GetChunk() is overloaded.
 	boolean AllocateQueue (unsigned nSizeMsecs);
 
+	/// \brief Allocate the queue used for Write()
+	/// \param nSizeMsecs Size of the queue in frames of audio
+	/// \note Not used, if GetChunk() is overloaded.
+	boolean AllocateQueueFrames (unsigned nSizeFrames);
+
 	/// \param Format    Format of sound data used for Write()
 	/// \param nChannels 1 or 2 channels
 	/// \note Not used, if GetChunk() is overloaded.
diff --git a/lib/soundbasedevice.cpp b/lib/soundbasedevice.cpp
index e23f5dc8..b156239b 100644
--- a/lib/soundbasedevice.cpp
+++ b/lib/soundbasedevice.cpp
@@ -106,6 +106,25 @@ boolean CSoundBaseDevice::AllocateQueue (unsigned nSizeMsecs)
 	return TRUE;
 }
 
+boolean CSoundBaseDevice::AllocateQueueFrames (unsigned nSizeFrames)
+{
+	assert (m_pQueue == 0);
+	assert (1 <= nSizeFrames && nSizeFrames <= m_nSampleRate);
+
+	// 1 byte remains free
+	m_nQueueSize = m_nHWFrameSize*nSizeFrames + 1;
+
+	m_pQueue = new u8[m_nQueueSize];
+	if (m_pQueue == 0)
+	{
+		return FALSE;
+	}
+
+	m_nNeedDataThreshold = m_nQueueSize / 2;
+
+	return TRUE;
+}
+
 void CSoundBaseDevice::SetWriteFormat (TSoundFormat Format, unsigned nChannels)
 {
 	assert (Format < SoundFormatUnknown);
