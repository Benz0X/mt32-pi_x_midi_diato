From bfbd0e1444c1cf7d3056a1a44fe0cf47bc9c9e3d Mon Sep 17 00:00:00 2001
From: Dale Whinham <daleyo@gmail.com>
Date: Wed, 25 Nov 2020 20:07:55 +0000
Subject: [PATCH] Add option to allow I2S DAC to be master clock

---
 include/circle/i2ssoundbasedevice.h |  5 ++++-
 lib/i2ssoundbasedevice.cpp          | 23 ++++++++++++++++++-----
 2 files changed, 22 insertions(+), 6 deletions(-)

diff --git a/include/circle/i2ssoundbasedevice.h b/include/circle/i2ssoundbasedevice.h
index 12366f26..242798ad 100644
--- a/include/circle/i2ssoundbasedevice.h
+++ b/include/circle/i2ssoundbasedevice.h
@@ -45,9 +45,11 @@ class CI2SSoundBaseDevice : public CSoundBaseDevice	/// Low level access to the
 	/// \param nSampleRate	sample rate in Hz
 	/// \param nChunkSize	twice the number of samples (words) to be handled\n
 	///			with one call to GetChunk() (one word per stereo channel)
+	/// \param bSlave		enable slave mode (PCM clock and FS clock are inputs)
 	CI2SSoundBaseDevice (CInterruptSystem *pInterrupt,
 			     unsigned	       nSampleRate = 192000,
-			     unsigned	       nChunkSize  = 8192);
+			     unsigned	       nChunkSize  = 8192,
+			     bool		       bSlave      = FALSE);
 
 	virtual ~CI2SSoundBaseDevice (void);
 
@@ -90,6 +92,7 @@ class CI2SSoundBaseDevice : public CSoundBaseDevice	/// Low level access to the
 private:
 	CInterruptSystem *m_pInterruptSystem;
 	unsigned m_nChunkSize;
+	bool     m_bSlave;
 
 	CGPIOPin   m_PCMCLKPin;
 	CGPIOPin   m_PCMFSPin;
diff --git a/lib/i2ssoundbasedevice.cpp b/lib/i2ssoundbasedevice.cpp
index 334e0150..3627b708 100644
--- a/lib/i2ssoundbasedevice.cpp
+++ b/lib/i2ssoundbasedevice.cpp
@@ -59,7 +59,9 @@
 #define CS_A_EN			(1 << 0)
 
 #define MODE_A_CLKI		(1 << 22)
+#define MODE_A_CLKM		(1 << 23)
 #define MODE_A_FSI		(1 << 20)
+#define MODE_A_FSM		(1 << 21)
 #define MODE_A_FLEN__SHIFT	10
 #define MODE_A_FSLEN__SHIFT	0
 
@@ -123,10 +125,12 @@
 
 CI2SSoundBaseDevice::CI2SSoundBaseDevice (CInterruptSystem *pInterrupt,
 					  unsigned	    nSampleRate,
-					  unsigned	    nChunkSize)
+					  unsigned	    nChunkSize,
+					  bool		    bSlave)
 :	CSoundBaseDevice (SoundFormatSigned24, 0, nSampleRate),
 	m_pInterruptSystem (pInterrupt),
 	m_nChunkSize (nChunkSize),
+	m_bSlave (bSlave),
 	m_PCMCLKPin (18, GPIOModeAlternateFunction0),
 	m_PCMFSPin (19, GPIOModeAlternateFunction0),
 	m_PCMDOUTPin (21, GPIOModeAlternateFunction0),
@@ -387,10 +391,19 @@ void CI2SSoundBaseDevice::RunI2S (void)
 				| TXC_A_CH2EN
 				| ((CHANLEN+1) << TXC_A_CH2POS__SHIFT)
 				| (0 << TXC_A_CH2WID__SHIFT));
-	write32 (ARM_PCM_MODE_A,   MODE_A_CLKI
-				 | MODE_A_FSI
-				 | ((CHANS*CHANLEN-1) << MODE_A_FLEN__SHIFT)
-				 | (CHANLEN << MODE_A_FSLEN__SHIFT));
+
+	u32 nModeA = MODE_A_CLKI
+				| MODE_A_FSI
+				| ((CHANS*CHANLEN-1) << MODE_A_FLEN__SHIFT)
+				| (CHANLEN << MODE_A_FSLEN__SHIFT);
+
+	// set PCM clock and frame sync as inputs if in slave mode
+	if (m_bSlave)
+	{
+		nModeA |= MODE_A_CLKM | MODE_A_FSM;
+	}
+
+	write32 (ARM_PCM_MODE_A, nModeA);
 
 	// disable standby
 	write32 (ARM_PCM_CS_A, read32 (ARM_PCM_CS_A) | CS_A_STBY);
